"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createThemeApi = void 0;
const utils_1 = require("@vuepress/utils");
const resolveThemeInfo_1 = require("./resolveThemeInfo");
/**
 * Create vuepress theme-api
 *
 * Resolve current theme, parent theme, theme layouts
 */
const createThemeApi = async (app) => {
    // use local theme or not
    // TODO: support .ts local theme entry
    const localThemePath = app.dir.source('.vuepress/theme');
    const hasLocalTheme = await utils_1.fs.pathExists(localThemePath);
    // resolve theme info
    const theme = resolveThemeInfo_1.resolveThemeInfo(app, hasLocalTheme ? localThemePath : app.options.theme);
    // resolve parent theme info
    const parentTheme = theme.plugin.extends
        ? resolveThemeInfo_1.resolveThemeInfo(app, theme.plugin.extends)
        : null;
    // resolve theme layouts
    const layouts = theme.layouts;
    // layouts in child theme will override
    // those with the same name in parent theme
    if (parentTheme !== null) {
        layouts.unshift(...parentTheme.layouts.filter(({ name: parentLayoutName }) => !theme.layouts.some(({ name: childLayoutName }) => childLayoutName === parentLayoutName)));
    }
    return {
        theme,
        parentTheme,
        layouts,
    };
};
exports.createThemeApi = createThemeApi;
//# sourceMappingURL=createThemeApi.js.map