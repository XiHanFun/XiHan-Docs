import { inject } from 'vue';
export const siteLocaleDataSymbol = Symbol(__DEV__ ? 'siteLocaleData' : '');
export const useSiteLocaleData = () => {
    const siteLocaleData = inject(siteLocaleDataSymbol);
    if (!siteLocaleData) {
        throw new Error('useSiteLocaleData() is called without provider.');
    }
    return siteLocaleData;
};
/**
 * Merge the locales fields to the root fields
 * according to the route path
 */
export const resolveSiteLocaleData = ({ base, lang, title, description, head, locales, themeConfig }, routeLocale) => {
    var _a, _b, _c;
    return ({
        base,
        lang,
        title,
        description,
        head,
        locales,
        ...((_a = locales[routeLocale]) !== null && _a !== void 0 ? _a : {}),
        themeConfig: {
            ...themeConfig,
            ...((_c = (_b = themeConfig.locales) === null || _b === void 0 ? void 0 : _b[routeLocale]) !== null && _c !== void 0 ? _c : {}),
        },
    });
};
//# sourceMappingURL=siteLocaleData.js.map