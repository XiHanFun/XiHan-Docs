import type { ComputedRef, InjectionKey } from 'vue';
import type { LocaleData, SiteData, SiteThemeConfig } from '@vuepress/shared';
export declare type ThemeData<T extends LocaleData = LocaleData> = SiteThemeConfig<T>;
export declare type ThemeDataRef<T extends LocaleData = LocaleData> = ComputedRef<ThemeData<T>>;
export declare const themeDataSymbol: InjectionKey<ThemeDataRef>;
export declare const themeLocaleDataSymbol: InjectionKey<ThemeDataRef>;
export declare const useThemeData: <T extends Record<string, any> = Record<string, any>>() => ThemeDataRef<T>;
export declare const useThemeLocaleData: <T extends Record<string, any> = Record<string, any>>() => ThemeDataRef<T>;
export declare const resolveThemeData: <T extends Record<string, any> = Record<string, any>>(siteData: SiteData<T>) => SiteThemeConfig<T>;
export declare const resolveThemeLocaleData: <T extends Record<string, any> = Record<string, any>>(siteData: SiteData<T>) => SiteThemeConfig<T>;
//# sourceMappingURL=themeData.d.ts.map